top_10_indices <- order(data1$p_age)[1:9]
top_10_indices<-c(top_10_indices,which(data1$Metabolite=='meta22'))
significant_points <- data.frame(
beta.lm = data1$Estimate_age[top_10_indices],
p.value = -log10(data1$p_age[top_10_indices]),
metabolic = data1$original_name[top_10_indices]
)
library(ggplot2)
library(ggrepel)
library(eoffice)
gg <- ggplot(data1, aes(x = Estimate_age, y = -log10(data1$p_age), color = data1$age_lm)) +
geom_vline(xintercept = 0, linetype = 2, color = "grey", size = 1) +
geom_hline(yintercept = -log10(0.05), linetype = 2, color = "grey", size = 1) +
geom_point(size = 3) +
scale_color_manual(values = c('positive' = '#DE3024', 'negative' = '#009acd', 'n.s.' = 'grey')) +
labs(
x = "Coefficients",
y = "-Log10(p value)",
color = "",
size=8
) + geom_text_repel(
data = significant_points,
aes(x = beta.lm, y = p.value, label = metabolic),
size = 5,
color = "black",
box.padding = unit(0.4, "lines"),
segment.color = "black",
segment.size = 0.6,
min.segment.length = 0.5
)+
theme_minimal(base_size = 16) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.title = element_text(color = "black", size = 16),
axis.ticks  = element_line(color = "black", linewidth = 0.5),
axis.text = element_text(color = "black", size = 15),
legend.position = 'none'
)
gg
rm(list=ls())
clin <- read_excel("209RA-age.xlsx")
meta_dt <- read_csv("364sample_185metabolites_mean_log10.csv")
# 原始行名替换表
rename_map <- c(
"B008" = "A004",
"B103" = "A136",
"B382" = "A378",
"A056" = "A050",
"A086" = "A085",
"A296" = "A295",
"A354" = "A353",
"A278" = "A277"
)
View(meta_dt)
View(clin)
# 假设 df 是你的数据框
# 替换行名
clin$Sample <- ifelse(clin$Sample %in% names(rename_map), rename_map[clin$Sample], clin$Sample)
colnames(meta_dt) <- ifelse(colnames(meta_dt) %in% names(rename_map), rename_map[colnames(meta_dt)], colnames(meta_dt))
write.csv(clin,'209RA-age.xlsx')
write.csv(meta_dt,'364sample_185metabolites_mean_log10.csv')
write.xlsx(clin, file = "209RA-age.xlsx", rowNames = FALSE)
rm(list=ls())
clin <- read_excel("209RA-age.xlsx")
meta_dt <- read_csv("364sample_185metabolites_mean_log10.csv")
meta_dt<-as.data.frame(meta_dt)
row.names(meta_dt)<-meta_dt[,1]
meta_dt<-meta_dt[,-1]
meta_dt<-as.data.frame(t(meta_dt))
meta_dt$Sample<-row.names(meta_dt)
data<-merge(clin[,c(1,4,12)],meta_dt,by='Sample',all.x = TRUE)
colnames(df)[3]<-'duration'
original_names <- colnames(df)[4:188]
colnames(df)[4:188] <- paste0("meta", 1:185)
metabolite_list<-colnames(df)[4:188]
results_list <- list()
df<-data
colnames(df)[3]<-'duration'
original_names <- colnames(df)[4:188]
colnames(df)[4:188] <- paste0("meta", 1:185)
metabolite_list<-colnames(df)[4:188]
results_list <- list()
for (meta in metabolite_list) {
formula_smooth <- as.formula(paste0("`", meta, "` ~ s(Age) + s(duration)"))
formula_linear <- as.formula(paste0("`", meta, "` ~ Age + s(duration)"))
df_sub <- na.omit(df[, c(meta, "Age", "duration")])
fit <- tryCatch({
gam(formula_smooth, data = df_sub, method = "REML")
}, error = function(e) NULL)
fit_linear <- tryCatch({
gam(formula_linear, data = df_sub, method = "REML")
}, error = function(e) NULL)
if (!is.null(fit) && !is.null(fit_linear)) {
s_tab <- summary(fit)$s.table
edf <- s_tab["s(Age)", "edf"]
p_smooth <- s_tab["s(Age)", "p-value"]
aic_smooth <- AIC(fit)
aic_linear <- AIC(fit_linear)
p_tab <- summary(fit_linear)$p.table
if ("Age" %in% rownames(p_tab)) {
est_age <- p_tab["Age", "Estimate"]
se_age <- p_tab["Age", "Std. Error"]
p_age <- p_tab["Age", "Pr(>|t|)"]
} else {
est_age <- se_age <- p_age <- NA
}
} else {
edf <- p_smooth <- aic_smooth <- aic_linear <- est_age <- se_age <- p_age <- NA
}
results_list[[meta]] <- data.frame(
Metabolite = meta,
edf = edf,
p_smooth = p_smooth,
AIC_smooth = aic_smooth,
AIC_linear = aic_linear,
Estimate_age = est_age,
StdErr_age = se_age,
p_age = p_age,
stringsAsFactors = FALSE
)
}
View(df)
results_df <- do.call(rbind, results_list)
results_df$original_name <- original_names[match(results_df$Metabolite, metabolite_list)]
View(results_df)
View(data)
df<-na.omit(data)
colnames(df)[3]<-'duration'
original_names <- colnames(df)[4:188]
colnames(df)[4:188] <- paste0("meta", 1:185)
data<-merge(clin[,c(1,4,12)],meta_dt,by='Sample',all.x = TRUE)
View(data)
meta_dt <- read_csv("364sample_185metabolites_mean_log10.csv")
View(meta_dt)
meta_dt <- read.csv("364sample_185metabolites_mean_log10.csv",row.names = 1)
meta_dt<-as.data.frame(meta_dt)
row.names(meta_dt)<-meta_dt[,1]
meta_dt<-meta_dt[,-1]
meta_dt<-as.data.frame(t(meta_dt))
meta_dt$Sample<-row.names(meta_dt)
data<-merge(clin[,c(1,4,12)],meta_dt,by='Sample',all.x = TRUE)
df<-na.omit(data)
colnames(df)[3]<-'duration'
original_names <- colnames(df)[4:188]
colnames(df)[4:188] <- paste0("meta", 1:185)
metabolite_list<-colnames(df)[4:188]
results_list <- list()
for (meta in metabolite_list) {
formula_smooth <- as.formula(paste0("`", meta, "` ~ s(Age) + s(duration)"))
formula_linear <- as.formula(paste0("`", meta, "` ~ Age + s(duration)"))
df_sub <- na.omit(df[, c(meta, "Age", "duration")])
fit <- tryCatch({
gam(formula_smooth, data = df_sub, method = "REML")
}, error = function(e) NULL)
fit_linear <- tryCatch({
gam(formula_linear, data = df_sub, method = "REML")
}, error = function(e) NULL)
if (!is.null(fit) && !is.null(fit_linear)) {
s_tab <- summary(fit)$s.table
edf <- s_tab["s(Age)", "edf"]
p_smooth <- s_tab["s(Age)", "p-value"]
aic_smooth <- AIC(fit)
aic_linear <- AIC(fit_linear)
p_tab <- summary(fit_linear)$p.table
if ("Age" %in% rownames(p_tab)) {
est_age <- p_tab["Age", "Estimate"]
se_age <- p_tab["Age", "Std. Error"]
p_age <- p_tab["Age", "Pr(>|t|)"]
} else {
est_age <- se_age <- p_age <- NA
}
} else {
edf <- p_smooth <- aic_smooth <- aic_linear <- est_age <- se_age <- p_age <- NA
}
results_list[[meta]] <- data.frame(
Metabolite = meta,
edf = edf,
p_smooth = p_smooth,
AIC_smooth = aic_smooth,
AIC_linear = aic_linear,
Estimate_age = est_age,
StdErr_age = se_age,
p_age = p_age,
stringsAsFactors = FALSE
)
}
results_df <- do.call(rbind, results_list)
results_df$original_name <- original_names[match(results_df$Metabolite, metabolite_list)]
df<-data
colnames(df)[3]<-'duration'
original_names <- colnames(df)[4:188]
colnames(df)[4:188] <- paste0("meta", 1:185)
metabolite_list<-colnames(df)[4:188]
results_list <- list()
for (meta in metabolite_list) {
formula_smooth <- as.formula(paste0("`", meta, "` ~ s(Age) + s(duration)"))
formula_linear <- as.formula(paste0("`", meta, "` ~ Age + s(duration)"))
df_sub <- na.omit(df[, c(meta, "Age", "duration")])
fit <- tryCatch({
gam(formula_smooth, data = df_sub, method = "REML")
}, error = function(e) NULL)
fit_linear <- tryCatch({
gam(formula_linear, data = df_sub, method = "REML")
}, error = function(e) NULL)
if (!is.null(fit) && !is.null(fit_linear)) {
s_tab <- summary(fit)$s.table
edf <- s_tab["s(Age)", "edf"]
p_smooth <- s_tab["s(Age)", "p-value"]
aic_smooth <- AIC(fit)
aic_linear <- AIC(fit_linear)
p_tab <- summary(fit_linear)$p.table
if ("Age" %in% rownames(p_tab)) {
est_age <- p_tab["Age", "Estimate"]
se_age <- p_tab["Age", "Std. Error"]
p_age <- p_tab["Age", "Pr(>|t|)"]
} else {
est_age <- se_age <- p_age <- NA
}
} else {
edf <- p_smooth <- aic_smooth <- aic_linear <- est_age <- se_age <- p_age <- NA
}
results_list[[meta]] <- data.frame(
Metabolite = meta,
edf = edf,
p_smooth = p_smooth,
AIC_smooth = aic_smooth,
AIC_linear = aic_linear,
Estimate_age = est_age,
StdErr_age = se_age,
p_age = p_age,
stringsAsFactors = FALSE
)
}
results_df <- do.call(rbind, results_list)
results_df$original_name <- original_names[match(results_df$Metabolite, metabolite_list)]
setwd("C:/Users/alice/Desktop/实验数据/代谢组/数据处理/Code/figure 3I-J")
rm(list=ls())
library("dplyr")
library(tidyr)
library(ggplot2)
library(eoffice)
library(geepack)
library(readxl)
data <- read.csv("364sample-185metabolites-log10-auto.csv",row.names = 1)
clin <- read_excel("RA information.xlsx")
merge1<-as.data.frame(t(data))
merge1$Sample<-row.names(merge1)
merge1<-merge(clin[,c(1,3,4,5:9,14,22)],merge1,by="Sample",all.x = TRUE)
colnames(merge1)[9]<-'ACPA'
merge1<-merge1[!merge1$ACPA=='NA',]
table(merge1$ACPA)
View(data)
View(clin)
data <- read.csv("364sample-185metabolites-log10-auto.csv",row.names = 1)
clin <- read_excel("RA information.xlsx")
merge1<-as.data.frame(t(data))
merge1$Sample<-row.names(merge1)
merge1<-merge(clin[,c(1,3,4,5:9,14,22)],merge1,by="Sample",all.x = TRUE)
colnames(merge1)[9]<-'ACPA'
merge1<-merge1[!merge1$ACPA=='NA',]
table(merge1$ACPA)
View(merge1)
merge1$ACPA <- as.numeric(ifelse(merge1$ACPA == "positive", 1,
ifelse(merge1$ACPA == "negative", 0, merge1$ACPA)))
merge1$Gender <- as.numeric( ifelse(merge1$Gender == "Female", 1,
ifelse(merge1$Gender == "Male", 0, merge1$Gender)))
table(merge1$Gender)
ACPA_positive <- merge1 %>% filter(`ACPA` == "1")
ACPA_negative <- merge1 %>% filter(`ACPA`== "0")
significance_matrix <- matrix(0, nrow = nrow(data), ncol = 100)
rownames(significance_matrix) <- row.names(data)
coef_matrix <- matrix(0, nrow = nrow(data), ncol = 100)
rownames(coef_matrix) <- row.names(data)
n_iterations <- 100
n_sample <- 14
set.seed(123)
metabolite_cols <- colnames(merge1)[11:195]
for (i in 1:n_iterations) {
set.seed(i)
sampled_ACPA_pos <- ACPA_positive %>% sample_n(n_sample)
sampled_data <- bind_rows(sampled_ACPA_pos, ACPA_negative)
sampled_data$ACPA<- factor(sampled_data$ACPA, levels = c("0", "1"))
sampled_data$ID<-c(1:nrow(sampled_data))
meta<-metabolite_cols[1]
for (meta in metabolite_cols) {
formula <- as.formula(paste0("`", meta, "`~ ACPA + Gender + Age + CRP"))
model <- geeglm(formula, data = sampled_data, id = ID, family = gaussian, corstr = "exchangeable")
coef_summary <- summary(model)$coefficients
p_value <- coef_summary[2, "Pr(>|W|)"]
coef<-coef_summary[2, "Estimate"]
significance_matrix[meta, i] <- p_value
coef_matrix[meta, i] <- coef
}
# print progress#
if(i %% 10 == 0) {
cat("complete", i, "iteration\n")
}
}
significant_counts <- apply(significance_matrix, 1, function(x) sum(x < 0.05))
result_df <- data.frame(
Metabolite = rownames(significance_matrix),
Significant_Count = significant_counts
)
significance_df <- as.data.frame(significance_matrix) %>%
mutate(Metabolite = rownames(significance_matrix))
View(result_df)
significance_long <- significance_df %>%
pivot_longer(
cols = -Metabolite,
names_to = "Iteration",
values_to = "P_Value"
)
target_metabolites <- c("Fumarate", "Phosphoenolpyruvic acid",'Argininosuccinic acid','Xanthosine')
significance_long <- significance_long %>%
mutate(Color = ifelse(Metabolite %in% target_metabolites,
"target",
"Other"))
median_p_values <- significance_long %>%
filter(Metabolite %in% target_metabolites) %>%
group_by(Metabolite) %>%
summarize(Median_P = median(P_Value, na.rm = TRUE))
color_mapping<-c("target"="#8b0000","Other"="lightgrey")
p<-ggplot(significance_long, aes(x = -log10(P_Value), group = Metabolite, fill = Color)) +
geom_density(data = subset(significance_long, !Metabolite %in% target_metabolites), alpha = 0.3,color='transparent') +
geom_density(data = subset(significance_long, Metabolite %in% target_metabolites), alpha = 0.3,color='transparent') +
geom_vline(xintercept = -log10(0.05), color = "grey", linetype = "dashed") +
geom_vline(data = median_p_values,
aes(xintercept = -log10(Median_P)),
linetype = "dashed",
color = "#5e5ea1") +
scale_fill_manual(values = color_mapping) +
labs(title = " ",
x = "-log10(p value)",
y = "Density") +
theme_classic() +
theme(
legend.position = 'none',
axis.line = element_line(size = 0.75),
axis.ticks = element_line(size = 0.75),
axis.ticks.length = unit(0.2, "cm")
)+scale_y_continuous(expand = c(0, 0))+
scale_x_continuous(expand = c(0, 0))
p
View(significance_df)
View(result_df)
setwd("C:/Users/alice/Desktop/实验数据/代谢组/数据处理/Code/figure 3I-J")
rm(list=ls())
data <- read.csv("364sample-185metabolites-log10-auto.csv",row.names = 1)
clin <- read_excel("RA information.xlsx")
merge1<-as.data.frame(t(data))
merge1$Sample<-row.names(merge1)
merge1<-merge(clin[,c(1,3,4,5:9,14,22)],merge1,by="Sample",all.x = TRUE)
colnames(merge1)[9]<-'ACPA'
merge1<-merge1[!merge1$ACPA=='NA',]
table(merge1$ACPA)
merge1$ACPA <- as.numeric(ifelse(merge1$ACPA == "positive", 1,
ifelse(merge1$ACPA == "negative", 0, merge1$ACPA)))
merge1$Gender <- as.numeric( ifelse(merge1$Gender == "Female", 1,
ifelse(merge1$Gender == "Male", 0, merge1$Gender)))
table(merge1$Gender)
ACPA_positive <- merge1 %>% filter(`ACPA` == "1")
ACPA_negative <- merge1 %>% filter(`ACPA`== "0")
significance_matrix <- matrix(0, nrow = nrow(data), ncol = 100)
rownames(significance_matrix) <- row.names(data)
coef_matrix <- matrix(0, nrow = nrow(data), ncol = 100)
rownames(coef_matrix) <- row.names(data)
n_iterations <- 100
n_sample <- 14
set.seed(123)
metabolite_cols <- colnames(merge1)[11:195]
for (i in 1:n_iterations) {
set.seed(i)
sampled_ACPA_pos <- ACPA_positive %>% sample_n(n_sample)
sampled_data <- bind_rows(sampled_ACPA_pos, ACPA_negative)
sampled_data$ACPA<- factor(sampled_data$ACPA, levels = c("0", "1"))
sampled_data$ID<-c(1:nrow(sampled_data))
meta<-metabolite_cols[1]
for (meta in metabolite_cols) {
formula <- as.formula(paste0("`", meta, "`~ ACPA + Gender + Age + CRP"))
model <- geeglm(formula, data = sampled_data, id = ID, family = gaussian, corstr = "exchangeable")
coef_summary <- summary(model)$coefficients
p_value <- coef_summary[2, "Pr(>|W|)"]
coef<-coef_summary[2, "Estimate"]
significance_matrix[meta, i] <- p_value
coef_matrix[meta, i] <- coef
}
# print progress#
if(i %% 10 == 0) {
cat("complete", i, "iteration\n")
}
}
significant_counts <- apply(significance_matrix, 1, function(x) sum(x < 0.05))
result_df <- data.frame(
Metabolite = rownames(significance_matrix),
Significant_Count = significant_counts
)
significance_df <- as.data.frame(significance_matrix) %>%
mutate(Metabolite = rownames(significance_matrix))
significance_long <- significance_df %>%
pivot_longer(
cols = -Metabolite,
names_to = "Iteration",
values_to = "P_Value"
)
View(result_df)
# 原始行名替换表
rename_map <- c(
"B008" = "A004",
"B103" = "A136",
"B382" = "A378",
"A056" = "A050",
"A086" = "A085",
"A296" = "A295",
"A354" = "A353",
"A278" = "A277"
)
rm(list = ls())
data <- read.csv("364sample-185metabolites-log10-auto.csv",row.names = 1)
clin <- read_excel("RA information.xlsx")
# 原始行名替换表
rename_map <- c(
"B008" = "A004",
"B103" = "A136",
"B382" = "A378",
"A056" = "A050",
"A086" = "A085",
"A296" = "A295",
"A354" = "A353",
"A278" = "A277"
)
View(clin)
View(data)
# 假设 df 是你的数据框
# 替换行名
colnames(data) <- ifelse(colnames(data) %in% names(rename_map), rename_map[colnames(data)], colnames(data))
# 假设 df 是你的数据框
# 替换行名
clin$Sample <- ifelse(clin$Sample %in% names(rename_map), rename_map[clin$Sample], clin$Sample)
write.csv(data,'364sample-185metabolites-log10-auto.csv',row.names = F)
write.xlsx(clin, file = "clin.xlsx", rowNames = FALSE)
write.xlsx(clin, file = "RA information.xlsx", rowNames = FALSE)
rm(list = ls())
data <- read.csv("364sample-185metabolites-log10-auto.csv",row.names = 1)
clin <- read_excel("RA information.xlsx")
View(clin)
View(data)
data <- read.csv("364sample-185metabolites-log10-auto.csv",row.names = 1)
clin <- read_excel("RA information.xlsx")
merge1<-as.data.frame(t(data))
merge1$Sample<-row.names(merge1)
merge1<-merge(clin[,c(1,3,4,5:9,14,22)],merge1,by="Sample",all.x = TRUE)
colnames(merge1)[9]<-'ACPA'
merge1<-merge1[!merge1$ACPA=='NA',]
table(merge1$ACPA)
merge1$ACPA <- as.numeric(ifelse(merge1$ACPA == "positive", 1,
ifelse(merge1$ACPA == "negative", 0, merge1$ACPA)))
merge1$Gender <- as.numeric( ifelse(merge1$Gender == "Female", 1,
ifelse(merge1$Gender == "Male", 0, merge1$Gender)))
table(merge1$Gender)
ACPA_positive <- merge1 %>% filter(`ACPA` == "1")
ACPA_negative <- merge1 %>% filter(`ACPA`== "0")
View(ACPA_negative)
View(ACPA_positive)
View(clin)
View(data)
View(merge1)
View(merge1)
significance_matrix <- matrix(0, nrow = nrow(data), ncol = 100)
rownames(significance_matrix) <- row.names(data)
coef_matrix <- matrix(0, nrow = nrow(data), ncol = 100)
rownames(coef_matrix) <- row.names(data)
n_iterations <- 100
n_sample <- 14
set.seed(123)
metabolite_cols <- colnames(merge1)[11:195]
for (i in 1:n_iterations) {
set.seed(i)
sampled_ACPA_pos <- ACPA_positive %>% sample_n(n_sample)
sampled_data <- bind_rows(sampled_ACPA_pos, ACPA_negative)
sampled_data$ACPA<- factor(sampled_data$ACPA, levels = c("0", "1"))
sampled_data$ID<-c(1:nrow(sampled_data))
meta<-metabolite_cols[1]
for (meta in metabolite_cols) {
formula <- as.formula(paste0("`", meta, "`~ ACPA + Gender + Age + CRP"))
model <- geeglm(formula, data = sampled_data, id = ID, family = gaussian, corstr = "exchangeable")
coef_summary <- summary(model)$coefficients
p_value <- coef_summary[2, "Pr(>|W|)"]
coef<-coef_summary[2, "Estimate"]
significance_matrix[meta, i] <- p_value
coef_matrix[meta, i] <- coef
}
# print progress#
if(i %% 10 == 0) {
cat("complete", i, "iteration\n")
}
}
significant_counts <- apply(significance_matrix, 1, function(x) sum(x < 0.05))
result_df <- data.frame(
Metabolite = rownames(significance_matrix),
Significant_Count = significant_counts
)
significance_df <- as.data.frame(significance_matrix) %>%
mutate(Metabolite = rownames(significance_matrix))
significance_long <- significance_df %>%
pivot_longer(
cols = -Metabolite,
names_to = "Iteration",
values_to = "P_Value"
)
View(result_df)
